name: Extension Tests

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  schedule:
    # Run daily at midnight UTC for site monitoring
    - cron: '0 0 * * *'

jobs:
  unit-tests:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run unit tests
      run: npm run test:unit
    
    - name: Generate coverage report
      run: npm run test:coverage
    
    - name: Upload coverage to Codecov
      uses: codecov/codecov-action@v3
      with:
        files: ./coverage/coverage-final.json
        flags: unittests
        name: codecov-umbrella

  e2e-tests:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        site: [zillow, realtor, redfin, loopnet, crexi, commercialsearch]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install chromium
    
    - name: Build extension
      run: npm run build
    
    - name: Run E2E tests for ${{ matrix.site }}
      run: npm run e2e:site -- --project=${{ matrix.site }}
      env:
        SITE: ${{ matrix.site }}
    
    - name: Upload test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: test-results-${{ matrix.site }}
        path: test-results/
    
    - name: Upload screenshots
      if: failure()
      uses: actions/upload-artifact@v4
      with:
        name: screenshots-${{ matrix.site }}
        path: test-results/screenshots/

  comprehensive-tests:
    runs-on: ubuntu-latest
    needs: [unit-tests, e2e-tests]
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install chromium
    
    - name: Build extension
      run: npm run build
    
    - name: Run comprehensive site tests
      run: npm run e2e:all
    
    - name: Upload comprehensive test results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: comprehensive-test-results
        path: test-results/

  site-monitoring:
    runs-on: ubuntu-latest
    if: github.event_name == 'schedule'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install chromium
    
    - name: Build extension
      run: npm run build
    
    - name: Run site monitoring tests
      run: npm run e2e:monitoring
      continue-on-error: true
    
    - name: Check test results
      id: check-results
      run: |
        if [ -f test-results/results.json ]; then
          FAILURES=$(jq '.stats.unexpected' test-results/results.json)
          TOTAL=$(jq '.stats.total' test-results/results.json)
          
          echo "failures=$FAILURES" >> $GITHUB_OUTPUT
          echo "total=$TOTAL" >> $GITHUB_OUTPUT
          
          if [ "$FAILURES" -gt 0 ]; then
            echo "Site monitoring detected failures: $FAILURES/$TOTAL tests failed"
            exit 1
          fi
        fi
    
    - name: Upload monitoring results
      if: always()
      uses: actions/upload-artifact@v4
      with:
        name: monitoring-results
        path: test-results/
    
    - name: Send Slack notification on failure
      if: failure()
      uses: slackapi/slack-github-action@v1
      with:
        payload: |
          {
            "text": "Extension Site Monitoring Alert",
            "blocks": [
              {
                "type": "section",
                "text": {
                  "type": "mrkdwn",
                  "text": "*ðŸš¨ Extension Site Monitoring Failed*\n${{ steps.check-results.outputs.failures }} out of ${{ steps.check-results.outputs.total }} tests failed.\n\nReal estate sites may have changed their DOM structure, breaking our address detection."
                }
              },
              {
                "type": "section",
                "fields": [
                  {
                    "type": "mrkdwn",
                    "text": "*Repository:*\n${{ github.repository }}"
                  },
                  {
                    "type": "mrkdwn",
                    "text": "*Branch:*\n${{ github.ref_name }}"
                  }
                ]
              },
              {
                "type": "actions",
                "elements": [
                  {
                    "type": "button",
                    "text": {
                      "type": "plain_text",
                      "text": "View Test Results"
                    },
                    "url": "${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }}"
                  }
                ]
              }
            ]
          }
      env:
        SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  performance-tests:
    runs-on: ubuntu-latest
    if: github.event_name != 'schedule'
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Install Playwright browsers
      run: npx playwright install chromium
    
    - name: Build extension
      run: npm run build
    
    - name: Run performance benchmarks
      run: npm run test:performance
    
    - name: Upload performance results
      uses: actions/upload-artifact@v4
      with:
        name: performance-results
        path: test-results/performance/

  security-scan:
    runs-on: ubuntu-latest
    
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'
    
    - name: Install dependencies
      run: npm ci
    
    - name: Run security audit
      run: npm audit --audit-level high
    
    - name: Scan for secrets
      uses: trufflesecurity/trufflehog@main
      with:
        path: ./
        base: main
        head: HEAD
    
    - name: Lint for security issues
      run: npm run lint:security